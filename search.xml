<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2025/03/27/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start">Quick Start</h2>
<h3 id="Create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>2.1.3 url传递参数的三种方式</title>
    <url>/2025/04/05/url%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h1>URL请求参数传递</h1>
<h2 id="原SupController代码：">原SupController代码：</h2>
<details>
  <summary>点击展开代码</summary>
  <pre>
    <code>
    package com.example.mystore.controller;
    import org.springframework.ui.Model;  // 必须是这个！
    import com.example.mystore.core.Result;
    import com.example.mystore.entity.Supplier;
    import com.example.mystore.service.SupService;
    import org.springframework.beans.factory.annotation.Autowired;
    import org.springframework.stereotype.Controller;
    import org.springframework.web.bind.annotation.*;
    @Controller
    public class SupController &#123;
    @Autowired
    private SupService supService;
        @GetMapping("/index")
        public String init(Model model)&#123;
            Result result = new Result();
            result.setCode(100);
            result.setMsg("初始状态");
            model.addAttribute("result",result);
            return "index";
        &#125;
        @RequestMapping("/check")
        public String loginCheck(Model model, Supplier supplier)&#123;
            model.addAttribute("scode",supplier.getScode());
            model.addAttribute("spassword",supplier.getSpassword());
            Result result = supService.checkSupplier(supplier);
            model.addAttribute("result",result);
            if (result.getCode() == 200) &#123;
                Supplier supObj = (Supplier) result.getData();
                model.addAttribute("sname", supObj.getSname());
                model.addAttribute("sweixin", supObj.getSweixin());
                model.addAttribute("tel", supObj.getTel());
                return "home";
            &#125;else return "index";
        &#125; 
    &#125;
  </code>
</pre>
</details>
<h2 id="1-形参名（无注解）接收参数">1.形参名（无注解）接收参数</h2>
<h3 id="（1）控制器编程">（1）控制器编程</h3>
<p>修改控制器SupController，代码如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;index&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SupController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SupService supService;</span><br><span class="line"></span><br><span class="line"><span class="comment">//形参名（无注解）接受参数</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/check&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">loginCheck</span><span class="params">(String scode,String spassword)</span>&#123;</span><br><span class="line">        <span class="type">Supplier</span> <span class="variable">supplier</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Supplier</span>();</span><br><span class="line">        supplier.setScode(scode);</span><br><span class="line">        supplier.setSpassword(spassword);</span><br><span class="line">        <span class="type">Result</span> <span class="variable">result</span> <span class="operator">=</span> supService.checkSupplier(supplier);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="（2）运行">（2）运行</h3>
<p>启动项目，打开浏览器，在地址栏中输入<a href="http://localhost:8080/index/check?scode=SXLC001A&amp;&amp;spassword=888">http://localhost:8080/index/check?scode=SXLC001A&amp;&amp;spassword=888</a><br>
<img src="images/url1%EF%BC%8C%E6%97%A0%E6%B3%A8%E8%A7%A3.png" alt="运行结果1"></p>
<h3 id="（3）说明">（3）说明</h3>
<p>1.要求url传递参数名与控制器方法的参数名必须一致<br>
2.参数与路径中间隔一个？，各参数之间用&amp;&amp;或&amp;分隔<br>
3.@RequestMapping(“/check”)可用以下形式代替<br>
@RequestMapping(value = “check” ,method = RequestMethod.GET)<br>
@GetMapping(“/check”)<br>
@GetMapping(value = “check”)</p>
<h2 id="2-路径（-PathVariable）传递参数">2.路径（@PathVariable）传递参数</h2>
<h3 id="1-控制器编程">(1)控制器编程</h3>
<p>在SupController类中添加loginCheckbyPath方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//路径@PathVariable传递参数</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/checkbypath/&#123;scode&#125;/&#123;spassword&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">loginCheckByPath</span><span class="params">(<span class="meta">@PathVariable</span> String scode,<span class="meta">@PathVariable</span> String spassword)</span>&#123;</span><br><span class="line">        <span class="type">Supplier</span> <span class="variable">supplier</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Supplier</span>();</span><br><span class="line">        supplier.setScode(scode);</span><br><span class="line">        supplier.setSpassword(spassword);</span><br><span class="line">        <span class="type">Result</span> <span class="variable">result</span> <span class="operator">=</span> supService.checkSupplier(supplier);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-运行">(2)运行</h3>
<p>启动项目，在浏览器地址栏中输入<a href="http://localhost:8080/index/checkbypath/SXLC001A/888">http://localhost:8080/index/checkbypath/SXLC001A/888</a><br>
<img src="images/url2%EF%BC%8Cbypath.png" alt="运行结果"></p>
<h2 id="3-用-RequestParam映射参数">3.用@RequestParam映射参数</h2>
<h3 id="1-控制器编程-2">(1)控制器编程</h3>
<p>在SupController类中添加loginCheckByPara方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用@RequestParam映射参数</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;checkbypara&quot;,method = RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">loginCheckByPara</span><span class="params">(<span class="meta">@RequestParam(value = &quot;scode&quot;)</span>String scode,<span class="meta">@RequestParam(value = &quot;spassword&quot;,required = false ,defaultValue = &quot;888&quot;)</span> String spassword)</span>&#123;</span><br><span class="line">        <span class="type">Supplier</span> <span class="variable">supplier</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Supplier</span>();</span><br><span class="line">        supplier.setScode(scode);</span><br><span class="line">        supplier.setSpassword(spassword);</span><br><span class="line">        <span class="type">Result</span> <span class="variable">result</span> <span class="operator">=</span> supService.checkSupplier(supplier);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-运行-2">(2)运行</h3>
<p>启动项目，在浏览器地址栏中输入<a href="http://localhost:8080/index/checkbypara?scode=SXLC001A">http://localhost:8080/index/checkbypara?scode=SXLC001A</a><br>
省略密码回车<br>
<img src="images/url3%EF%BC%8Cbypara.png" alt="运行结果3"></p>
<h2 id="4-总结">4.总结</h2>
<p>通过url传递参数有三种方式，一种是直接通过url传递参数，第二种是直接通过路径传递参数，第三种是支持参数映射和默认值的参数传递</p>
]]></content>
      <categories>
        <category>spring boot</category>
      </categories>
  </entry>
  <entry>
    <title>spring boot 入门程序</title>
    <url>/2025/03/28/spring-boot-%E5%85%A5%E9%97%A8%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="Spring-Boot-商家登录系统实战"><a href="#Spring-Boot-商家登录系统实战" class="headerlink" title="Spring Boot 商家登录系统实战"></a>Spring Boot 商家登录系统实战</h1><blockquote>
<p>基于《Spring Boot 实用教程 第四版》郑阿奇主编案例实现<br>完整代码可复制，帮助快速实现课本案例</p>
</blockquote>
<h2 id="2-1开发经典案例"><a href="#2-1开发经典案例" class="headerlink" title="2.1开发经典案例"></a>2.1开发经典案例</h2><h2 id="2-1-1从登录功能说起"><a href="#2-1-1从登录功能说起" class="headerlink" title="2.1.1从登录功能说起"></a>2.1.1从登录功能说起</h2><h3 id="1-创建数据库和表"><a href="#1-创建数据库和表" class="headerlink" title="1.创建数据库和表"></a>1.创建数据库和表</h3><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATEABASE netshop</span><br><span class="line"></span><br><span class="line">USE netshop</span><br></pre></td></tr></table></figure>
<h4 id="创建商家表"><a href="#创建商家表" class="headerlink" title="创建商家表"></a>创建商家表</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> `supplier` (</span><br><span class="line">  `SCode` <span class="type">char</span>(<span class="number">8</span>) <span class="keyword">NOT NULL</span> COMMENT <span class="string">&#x27;商家编码&#x27;</span>,</span><br><span class="line">  `SPassWord` <span class="type">varchar</span>(<span class="number">12</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;888&#x27;</span> COMMENT <span class="string">&#x27;商家密码&#x27;</span>,</span><br><span class="line">  `SName` <span class="type">varchar</span>(<span class="number">16</span>) <span class="keyword">NOT NULL</span> COMMENT <span class="string">&#x27;商家名称&#x27;</span>,</span><br><span class="line">  `SWeixin` <span class="type">varchar</span>(<span class="number">16</span>) <span class="keyword">CHARACTER SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_0900_ai_ci <span class="keyword">NOT NULL</span> COMMENT <span class="string">&#x27;微信&#x27;</span>,</span><br><span class="line">  `Tel` <span class="type">char</span>(<span class="number">13</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;电话&#x27;</span>,</span><br><span class="line">  `Evaluate` <span class="type">float</span>(<span class="number">4</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;0.00&#x27;</span> COMMENT <span class="string">&#x27;商家综合评价&#x27;</span>,</span><br><span class="line">  `SLicence` mediumblob COMMENT <span class="string">&#x27;营业执照图片&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span> (`SCode`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci</span><br></pre></td></tr></table></figure>
<h4 id="插入测试数据"><a href="#插入测试数据" class="headerlink" title="插入测试数据"></a>插入测试数据</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT INTO</span> `supplier` <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="string">&#x27;SXLC001A&#x27;</span>, <span class="string">&#x27;888&#x27;</span>, <span class="string">&#x27;陕西洛川苹果有限公司&#x27;</span>, <span class="string">&#x27;8123456-aa.com&#x27;</span>, <span class="string">&#x27;0911-812345X&#x27;</span>, <span class="number">0.00</span>, <span class="keyword">NULL</span>);</span><br></pre></td></tr></table></figure>

<h3 id="2-创建spring-boot项目"><a href="#2-创建spring-boot项目" class="headerlink" title="2.创建spring boot项目"></a>2.创建spring boot项目</h3><p>创建项目时选用依赖：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Developer Tools&quot;</span>中选中Lombok,Spring Boot DevTools.</span><br><span class="line"><span class="string">&quot;Web&quot;</span>:Spring web</span><br><span class="line"><span class="string">&quot;Template Engines&quot;</span>:Thymeleaf<span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span>SQL<span class="string">&quot;:MySQL Driver</span></span><br></pre></td></tr></table></figure>
<h3 id="3配置数据库连接"><a href="#3配置数据库连接" class="headerlink" title="3配置数据库连接"></a>3配置数据库连接</h3><p>在application.properties中配置数据库连接信息</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">spring.datasource.url=jdbc:mysql:<span class="comment">//localhost:3306/netshop?useSSL=true&amp;serverTimezone=UTC</span></span><br><span class="line">spring.datasource.username=root</span><br><span class="line">spring.datasource.password=<span class="number">123456</span></span><br><span class="line">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver</span><br><span class="line">spring.jackson.serialization.indent-output=<span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h2 id="2-1-2分层设计"><a href="#2-1-2分层设计" class="headerlink" title="2.1.2分层设计"></a>2.1.2分层设计</h2><h3 id="1-持久层开发"><a href="#1-持久层开发" class="headerlink" title="1.持久层开发"></a>1.持久层开发</h3><pre><code>在ser/main/java/com/example/mystore下新建package repository。
</code></pre>
<h4 id="1-创建SupRepository接口"><a href="#1-创建SupRepository接口" class="headerlink" title="1.创建SupRepository接口"></a>1.创建SupRepository接口</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="keyword">package</span> com.example.mystore.repository;</span><br><span class="line"><span class="keyword">import</span> com.example.mystore.entity.Supplier;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SupRepository</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Supplier <span class="title function_">findSuppLier</span><span class="params">(Supplier supplier)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-创建SupRepositoryImpl类"><a href="#2-创建SupRepositoryImpl类" class="headerlink" title="2.创建SupRepositoryImpl类"></a>2.创建SupRepositoryImpl类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mystore.repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.mystore.entity.Supplier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.BeanPropertyRowMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.RowMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SupRepositoryImpl</span> <span class="keyword">implements</span> <span class="title class_">SupRepository</span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Supplier <span class="title function_">findSuppLier</span><span class="params">(Supplier supplier)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;SELECT * FROM supplier WHERE SCode = ?&quot;</span>;<span class="comment">//根据商家编码查询数据库</span></span><br><span class="line">            Object args[] = &#123;</span><br><span class="line">                    supplier.getScode()</span><br><span class="line">            &#125;;</span><br><span class="line">            RowMapper&lt;Supplier&gt; rowMapper = <span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;Supplier&gt;(Supplier.class);</span><br><span class="line">            <span class="type">Supplier</span> <span class="variable">supObj</span> <span class="operator">=</span> jdbcTemplate.queryForObject(sql,args,rowMapper);</span><br><span class="line">            <span class="keyword">return</span> supObj;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-业务层开发"><a href="#2-业务层开发" class="headerlink" title="2.业务层开发"></a>2.业务层开发</h3><h4 id="1-设计响应实体类Result"><a href="#1-设计响应实体类Result" class="headerlink" title="1.设计响应实体类Result"></a>1.设计响应实体类Result</h4><pre><code>在com.example.mystore下新建package core,在其中定义Result类
</code></pre>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mystore.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Result</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> code;<span class="comment">//返回码</span></span><br><span class="line">    <span class="keyword">private</span> String msg;<span class="comment">//返回消息</span></span><br><span class="line">    <span class="keyword">private</span> Object data;<span class="comment">//返回数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> code</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCode</span><span class="params">(<span class="type">int</span> code)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> msg</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMsg</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> data</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setData</span><span class="params">(Object data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-定义业务接口"><a href="#2-定义业务接口" class="headerlink" title="2.定义业务接口"></a>2.定义业务接口</h4><pre><code>在com.example.mystore下新建package service,在其中定义SupService接口
</code></pre>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mystore.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.mystore.core.Result;</span><br><span class="line"><span class="keyword">import</span> com.example.mystore.entity.Supplier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SupService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">checkSupplier</span><span class="params">(Supplier supplier)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-定义业务实现类SupServiceImpl"><a href="#3-定义业务实现类SupServiceImpl" class="headerlink" title="3.定义业务实现类SupServiceImpl"></a>3.定义业务实现类SupServiceImpl</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mystore.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.mystore.core.Result;</span><br><span class="line"><span class="keyword">import</span> com.example.mystore.entity.Supplier;</span><br><span class="line"><span class="keyword">import</span> com.example.mystore.repository.SupRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SupServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">SupService</span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SupRepository supRepository;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">checkSupplier</span><span class="params">(Supplier supplier)</span> &#123;</span><br><span class="line">        <span class="type">Supplier</span> <span class="variable">supObj</span> <span class="operator">=</span> supRepository.findSuppLier(supplier);</span><br><span class="line">        <span class="type">Result</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Result</span>();</span><br><span class="line">        <span class="keyword">if</span>(supObj == <span class="literal">null</span>)&#123;</span><br><span class="line">            result.setCode(<span class="number">404</span>);</span><br><span class="line">            result.setMsg(<span class="string">&quot;用户不存在&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!supplier.getSpassword().equals(supObj.getSpassword()))&#123;</span><br><span class="line">                result.setCode(<span class="number">403</span>);</span><br><span class="line">                result.setMsg(<span class="string">&quot;密码错&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                result.setCode(<span class="number">200</span>);</span><br><span class="line">                result.setMsg(<span class="string">&quot;验证通过&quot;</span>);</span><br><span class="line">                result.setData(supObj);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-表示层开发"><a href="#3-表示层开发" class="headerlink" title="3.表示层开发"></a>3.表示层开发</h3><h4 id="1-设计模型"><a href="#1-设计模型" class="headerlink" title="1.设计模型"></a>1.设计模型</h4><pre><code>在com.example.mystore下新建package entity,在其中定义Supplier类
</code></pre>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mystore.entity;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Supplier</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String scode;<span class="comment">//商家编码</span></span><br><span class="line">    <span class="keyword">private</span> String spassword;<span class="comment">//密码</span></span><br><span class="line">    <span class="keyword">private</span> String sname;<span class="comment">//名字</span></span><br><span class="line">    <span class="keyword">private</span> String sweixin;<span class="comment">//微信</span></span><br><span class="line">    <span class="keyword">private</span> String tel;<span class="comment">//电话号码</span></span><br><span class="line">    <span class="keyword">private</span> String evaluate;<span class="comment">//评分</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2，设计前端页面"><a href="#2，设计前端页面" class="headerlink" title="2，设计前端页面"></a>2，设计前端页面</h4><pre><code>在src/main/resources/templates下新建index.html和home.html
index.html:
</code></pre>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span><span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;html lang=&quot;en&quot;&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.mytd</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: xx-small;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>商品信息管理系统<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#e0ffff&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/check&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center;margin: auto&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">caption</span>&gt;</span><span class="tag">&lt;<span class="name">h4</span>&gt;</span>商家登录<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span><span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>用<span class="symbol">&amp;nbsp;</span>户<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">th:type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;scode&quot;</span> <span class="attr">size</span>=<span class="string">&quot;16&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;scode&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;mytd&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;result.getCode() == 404&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;result.getMsg()&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>密<span class="symbol">&amp;nbsp;</span>码<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">th:type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;spassword&quot;</span> <span class="attr">size</span>=<span class="string">&quot;16&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;spassword&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;mytd&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;result.getCode() == 403&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;result.getMsg()&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>home.html:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span><span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.mydiv</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">350px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>商品信息管理系统<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#e0ffff&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span> <span class="attr">style</span>=<span class="string">&quot;display: inline&quot;</span>&gt;</span>用户<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span> = <span class="string">&quot;$&#123;scode&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>您好！欢迎使用商品信息管理系统<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">&quot;您在本站的注册信息如下&quot;</span> <span class="attr">class</span>=<span class="string">&quot;mydiv&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 30px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">&quot;&#x27;商家:&#x27;+$&#123;sname&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;mydiv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">&quot;&#x27;微信:&#x27;+$&#123;sweixin&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;mydiv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">&quot;&#x27;电话:&#x27;+$&#123;tel&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;mydiv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-控制层开发"><a href="#4-控制层开发" class="headerlink" title="4.控制层开发"></a>4.控制层开发</h3><p>在com.example.mystore下新建package controller,在其中定义SupController类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mystore.controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;  <span class="comment">// 必须是这个！</span></span><br><span class="line"><span class="keyword">import</span> com.example.mystore.core.Result;</span><br><span class="line"><span class="keyword">import</span> com.example.mystore.entity.Supplier;</span><br><span class="line"><span class="keyword">import</span> com.example.mystore.service.SupService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SupController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SupService supService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/index&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">init</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">        <span class="type">Result</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Result</span>();</span><br><span class="line">        result.setCode(<span class="number">100</span>);</span><br><span class="line">        result.setMsg(<span class="string">&quot;初始状态&quot;</span>);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;result&quot;</span>,result);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/check&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">loginCheck</span><span class="params">(Model model, Supplier supplier)</span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;scode&quot;</span>,supplier.getScode());</span><br><span class="line">        model.addAttribute(<span class="string">&quot;spassword&quot;</span>,supplier.getSpassword());</span><br><span class="line">        <span class="type">Result</span> <span class="variable">result</span> <span class="operator">=</span> supService.checkSupplier(supplier);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;result&quot;</span>,result);</span><br><span class="line">        <span class="keyword">if</span> (result.getCode() == <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="type">Supplier</span> <span class="variable">supObj</span> <span class="operator">=</span> (Supplier) result.getData();</span><br><span class="line">            model.addAttribute(<span class="string">&quot;sname&quot;</span>, supObj.getSname());</span><br><span class="line">            model.addAttribute(<span class="string">&quot;sweixin&quot;</span>, supObj.getSweixin());</span><br><span class="line">            model.addAttribute(<span class="string">&quot;tel&quot;</span>, supObj.getTel());</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;home&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="5-运行测试"><a href="#5-运行测试" class="headerlink" title="5.运行测试"></a>5.运行测试</h3><p>单击IDEA工具栏的启动按钮<br>访问<a href="https://localhost:8080/index">https://localhost:8080/index</a><br>输入用户名 SXLC001A<br>和密码 888<br>运行结果：<br>登录界面：<img src="/images/%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2.png" alt="登录界面"><br>登录成功界面：<img src="/images/%E7%99%BB%E5%BD%95%E6%88%90%E5%8A%9F.png" alt="登录成功"></p>
<p>本站所有内容仅供学习交流使用，如有侵权请联系<a href="mailto:&#119;&#x73;&#104;&#x31;&#52;&#x39;&#50;&#49;&#x38;&#49;&#x35;&#49;&#57;&#64;&#49;&#54;&#51;&#x2e;&#x63;&#111;&#x6d;">wsh1492181519@163.com</a>管理员删除!</p>
]]></content>
      <categories>
        <category>spring boot</category>
      </categories>
      <tags>
        <tag>入门程序</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一篇文章</title>
    <url>/2025/03/27/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<h2 id="test">test</h2>
<ul>
<li>列表</li>
<li><a href="https://hexo.io">链接</a><br>
<img src="/images/star1.png" alt="star"></li>
</ul>
]]></content>
      <categories>
        <category>test</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>创建第一篇文章</tag>
      </tags>
  </entry>
  <entry>
    <title>20岁</title>
    <url>/2025/04/18/%E5%86%99%E7%9C%9F/</url>
    <content><![CDATA[<div class="gallery-group-main">
<figure class="gallery-group">
    <img class="gallery-group-img no-lightbox" src='/images/IMG_0573.jpg' alt="Group Image Gallery">
    <figcaption>
      <div class="gallery-group-name">写真</div>
      <p>20岁</p>
      <a href='/images/photo'></a>
    </figcaption>
  </figure>
</div>




]]></content>
      <categories>
        <category>images</category>
      </categories>
  </entry>
  <entry>
    <title>计算机网络第一章</title>
    <url>/2025/05/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%AC%E4%B8%80%E7%AB%A0/</url>
    <content><![CDATA[<h1 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h1><p><img src="/images/%E7%AC%AC%E4%B8%80%E7%AB%A0.png" alt="第一章"></p>
<h2 id="因特网发展的三个阶段"><a href="#因特网发展的三个阶段" class="headerlink" title="因特网发展的三个阶段"></a>因特网发展的三个阶段</h2><p><img src="/images/%E5%9B%A0%E7%89%B9%E7%BD%91%E5%8F%91%E5%B1%95%E7%9A%84%E4%B8%89%E4%B8%AA%E9%98%B6%E6%AE%B5.png" alt="第一章"></p>
<h2 id="RFC的三个阶段"><a href="#RFC的三个阶段" class="headerlink" title="RFC的三个阶段"></a>RFC的三个阶段</h2><p><img src="/images/%E5%88%B6%E8%AE%A2%E5%9B%A0%E7%89%B9%E7%BD%91%E7%9A%84%E6%AD%A3%E5%BC%8F%E6%A0%87%E5%87%86%E8%A6%81%E7%BB%8F%E8%BF%87%E4%BB%A5%E4%B8%8B%E7%9A%84%E4%B8%89%E4%B8%AA%E9%98%B6%E6%AE%B5.png" alt="因特网发展的三个阶段"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>思维导图</tag>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>第二章 物理层</title>
    <url>/2025/05/16/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%89%A9%E7%90%86%E5%B1%82/</url>
    <content><![CDATA[<h1 id="计算机网络第二章-物理层"><a href="#计算机网络第二章-物理层" class="headerlink" title="计算机网络第二章 物理层"></a>计算机网络第二章 物理层</h1><p><img src="/images/%E7%89%A9%E7%90%86%E5%B1%82.png" alt="物理层"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>思维导图</tag>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>第三章 数据链路层</title>
    <url>/2025/05/20/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</url>
    <content><![CDATA[<h1 id="第三章-数据链路层"><a href="#第三章-数据链路层" class="headerlink" title="第三章 数据链路层"></a>第三章 数据链路层</h1><p><img src="/images/%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82.png" alt="数据链路层"><br>注：流量控制与可靠传输机制后补</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>思维导图</tag>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>第四章 网络层</title>
    <url>/2025/05/20/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E7%BD%91%E7%BB%9C%E5%B1%82/</url>
    <content><![CDATA[<h1 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h1><p><img src="/images/%E7%BD%91%E7%BB%9C%E5%B1%82.png" alt="网络层"><br><img src="/images/%E7%BD%91%E7%BB%9C%E5%B1%82%E7%BB%AD.png" alt="网络层续"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>思维导图</tag>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>第六章 应用层</title>
    <url>/2025/05/20/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E5%BA%94%E7%94%A8%E5%B1%82/</url>
    <content><![CDATA[<h1 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h1><p><img src="/images/%E5%BA%94%E7%94%A8%E5%B1%82.png" alt="应用层"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>思维导图</tag>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>第五章 运输层</title>
    <url>/2025/05/20/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E8%BF%90%E8%BE%93%E5%B1%82/</url>
    <content><![CDATA[<h1 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h1><p><img src="/images/%E4%BC%A0%E8%BE%93%E5%B1%82.png" alt="传输层"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>思维导图</tag>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>第二章 Spring Boot开发入门</title>
    <url>/2025/06/26/%E7%AC%AC%E4%BA%8C%E7%AB%A0-Spring-Boot%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="第二章-Spring-Boot开发入门"><a href="#第二章-Spring-Boot开发入门" class="headerlink" title="第二章 Spring Boot开发入门"></a>第二章 Spring Boot开发入门</h1><p><img src="/images/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20Spring%20Boot%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8.png" alt="第二章 Spring Boot开发入门.png"></p>
<h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p><a href="https://docs.spring.io/spring-boot/docs/">查看官方starter</a><br><a href="https://mvnrepository.com/">检索第三方Starter</a></p>
]]></content>
      <categories>
        <category>spring boot</category>
      </categories>
      <tags>
        <tag>思维导图</tag>
        <tag>spring boot</tag>
      </tags>
  </entry>
  <entry>
    <title>第三章 Thymeleaf模板引擎</title>
    <url>/2025/06/26/%E7%AC%AC%E4%B8%89%E7%AB%A0-Thymeleaf%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E/</url>
    <content><![CDATA[<h1 id="第三章-Thymeleaf模板引擎"><a href="#第三章-Thymeleaf模板引擎" class="headerlink" title="第三章 Thymeleaf模板引擎"></a>第三章 Thymeleaf模板引擎</h1><p><img src="/images/%E7%AC%AC%E4%B8%89%E7%AB%A0%20Thymeleaf%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E.png" alt="第三章 Thymeleaf模板引擎.png"></p>
<h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p><a href="https://developer.aliyun.com/article/769977">Thymeleaf一篇就够了|阿里云社区</a><br><a href="https://www.runoob.com/bootstrap/bootstrap-tutorial.html">Bootstrap 教程|菜鸟教程</a></p>
]]></content>
      <categories>
        <category>spring boot</category>
      </categories>
      <tags>
        <tag>思维导图</tag>
        <tag>spring boot</tag>
      </tags>
  </entry>
  <entry>
    <title>第四章 Spring Boot核心编程与开发技术</title>
    <url>/2025/06/26/%E7%AC%AC%E5%9B%9B%E7%AB%A0-Spring-Boot%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E4%B8%8E%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/</url>
    <content><![CDATA[<h1 id="第四章-Spring-Boot核心编程与开发技术"><a href="#第四章-Spring-Boot核心编程与开发技术" class="headerlink" title="第四章 Spring Boot核心编程与开发技术"></a>第四章 Spring Boot核心编程与开发技术</h1><p><img src="/images/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20Spring%20Boot%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E4%B8%8E%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF.png" alt="第四章 Spring Boot核心编程与开发技术.png"></p>
<h2 id="后续没总结，但是考完试了，所以……"><a href="#后续没总结，但是考完试了，所以……" class="headerlink" title="后续没总结，但是考完试了，所以……"></a>后续没总结，但是考完试了，所以……</h2>]]></content>
      <categories>
        <category>spring boot</category>
      </categories>
      <tags>
        <tag>思维导图</tag>
        <tag>spring boot</tag>
      </tags>
  </entry>
  <entry>
    <title>第一章 HTML 5基础和Spring Boot环境</title>
    <url>/2025/06/26/%E7%AC%AC%E4%B8%80%E7%AB%A0%20HTML%205%E5%9F%BA%E7%A1%80%E5%92%8CSpring%20Boot%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h1 id="第一章-HTML-5基础和Spring-Boot环境"><a href="#第一章-HTML-5基础和Spring-Boot环境" class="headerlink" title="第一章 HTML 5基础和Spring Boot环境"></a>第一章 HTML 5基础和Spring Boot环境</h1><p><img src="/images/%E7%AC%AC%E4%B8%80%E7%AB%A0%20HTML%205%E5%9F%BA%E7%A1%80%E5%92%8CSpring%20Boot%E7%8E%AF%E5%A2%83.png" alt="第一章 HTML 5基础和Spring Boot环境.png"></p>
<h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p><a href="https://www.runoob.com/html/html5-intro.html">HTML5教程，菜鸟教程</a><br><a href="https://www.runoob.com/java/java-environment-setup.html">JAVA环境配置，菜鸟教程</a><br><a href="https://www.runoob.com/maven/maven-setup.html">MAVEN环境配置，菜鸟教程</a></p>
]]></content>
      <categories>
        <category>spring boot</category>
      </categories>
      <tags>
        <tag>思维导图</tag>
        <tag>spring boot</tag>
      </tags>
  </entry>
  <entry>
    <title>第一章 计算机系统概述</title>
    <url>/2025/06/26/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<h1 id="第一章-计算机系统概述"><a href="#第一章-计算机系统概述" class="headerlink" title="第一章 计算机系统概述"></a>第一章 计算机系统概述</h1><p><img src="/images/%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%8C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0.png" alt="第一章，计算机系统概述.png"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>思维导图</tag>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio 虚拟设备AVD启动失败问题解决方案</title>
    <url>/2025/06/30/Android-studio-%E8%99%9A%E6%8B%9F%E8%AE%BE%E5%A4%87AVD%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="Android-Studio在启动虚拟设备时报错问题"><a href="#Android-Studio在启动虚拟设备时报错问题" class="headerlink" title="Android Studio在启动虚拟设备时报错问题"></a>Android Studio在启动虚拟设备时报错问题</h1><h2 id="报错现象"><a href="#报错现象" class="headerlink" title="报错现象"></a>报错现象</h2><p>Error<br>Unable to launch Small Phone -The emulatorprocess for AVD Small Phone has terminated<br><img src= "/images/img.png" data-lazy-src="/images/Android%E6%8A%A5%E9%94%991.png" alt="Android报错1.png"><br>或</p>
<p>Small Phone<br>The emulator process for AVD Small Phone hasterminated.<br><img src= "/images/img.png" data-lazy-src="/images/Android%E6%8A%A5%E9%94%992.png" alt="Android报错2.png"></p>
<hr>
<h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p><strong>中文路径冲突问题</strong>：</p>
<ul>
<li>AVD默认安装路径为：<code>C:\Users\&lt;用户名&gt;\.android</code></li>
<li>当Windows用户名包含<strong>中文</strong>时，会导致路径出现中文字符</li>
<li>Android模拟器无法正确处理中文路径，从而引发启动失败</li>
</ul>
<hr>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>迁移.android目录</p>
<h3 id="具体步骤："><a href="#具体步骤：" class="headerlink" title="具体步骤："></a>具体步骤：</h3><h4 id="1-创建新目录"><a href="#1-创建新目录" class="headerlink" title="1.创建新目录"></a>1.创建新目录</h4><p>在目标盘（如 F 盘）新建文件夹：F:\Android_AVD</p>
<h4 id="2-设置系统环境变量"><a href="#2-设置系统环境变量" class="headerlink" title="2.设置系统环境变量"></a>2.设置系统环境变量</h4><ul>
<li>（1）打开 控制面板 → 系统和安全 → 系统 → 高级系统设置 → 环境变量</li>
<li>（2）新建系统变量<ul>
<li>变量名：ANDROID_SDK_HOME</li>
<li>变量值：F:\Android_AVD</li>
</ul>
</li>
<li>（3）保存并重启电脑</li>
</ul>
<h4 id="3-移动现有文件"><a href="#3-移动现有文件" class="headerlink" title="3.移动现有文件"></a>3.移动现有文件</h4><p>将 C:\Users&lt;用户名&gt;.android 整个文件夹剪切到 F:\Android_AVD</p>
<h4 id="4-修改-AVD-配置文件"><a href="#4-修改-AVD-配置文件" class="headerlink" title="4.修改 AVD 配置文件"></a>4.修改 AVD 配置文件</h4><ul>
<li>（1）打开 F:\Android_AVD.android\avd&lt;模拟器名称&gt;.ini</li>
<li>（2）修改 path 指向新位置（如 path&#x3D;F:\Android_AVD.android\avd&lt;模拟器名称&gt;.avd）</li>
<li>（3）保存文件</li>
</ul>
<hr>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>解决中文路径导致的AVD启动失败问题  </li>
<li>释放C盘空间（每个AVD通常占用1-5GB空间）</li>
</ul>
<hr>
<h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>运行成功<br><img src= "/images/img.png" data-lazy-src="/images/AVD%E5%90%AF%E5%8A%A8%E6%88%90%E5%8A%9F.png" alt="AVD启动成功.png"></p>
]]></content>
      <categories>
        <category>debug</category>
      </categories>
      <tags>
        <tag>debug</tag>
        <tag>android studio</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构一</title>
    <url>/2025/09/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%80/</url>
    <content><![CDATA[<h1>第一章 绪论</h1>
<h2 id="数据结构的基本概念">数据结构的基本概念</h2>
<h3 id="基本概念和三要素">基本概念和三要素</h3>
<p><img src= "/images/img.png" data-lazy-src="../images/datastruct/data1/data1.1.png" alt="data1.1.png"><br>
<img src= "/images/img.png" data-lazy-src="../images/datastruct/data1/data1.2.png" alt="data1.2.png"></p>
<h2 id="算法和算法评价">算法和算法评价</h2>
<h3 id="五个特性，好的特质">五个特性，好的特质</h3>
<p><img src= "/images/img.png" data-lazy-src="../images/datastruct/data1/data1.3.png" alt="data1.3.png"></p>
<h3 id="时间复杂度">时间复杂度</h3>
<p><img src= "/images/img.png" data-lazy-src="../images/datastruct/data1/data1.4.png" alt="data1.4.png"></p>
<h3 id="空间复杂度">空间复杂度</h3>
<p><img src= "/images/img.png" data-lazy-src="../images/datastruct/data1/data1.5.png" alt="data1.5.png"></p>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>思维导图</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构二</title>
    <url>/2025/09/15/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BA%8C/</url>
    <content><![CDATA[<h1 id="第二章-线性表"><a href="#第二章-线性表" class="headerlink" title="第二章 线性表"></a>第二章 线性表</h1><h2 id="线性表的定义和基本操作"><a href="#线性表的定义和基本操作" class="headerlink" title="线性表的定义和基本操作"></a>线性表的定义和基本操作</h2><p><img src= "/images/img.png" data-lazy-src="/images/datastruct/data2.1.png" alt="data2.1.png"></p>
<h2 id="线性表的顺序表示"><a href="#线性表的顺序表示" class="headerlink" title="线性表的顺序表示"></a>线性表的顺序表示</h2><h3 id="顺序表的定义"><a href="#顺序表的定义" class="headerlink" title="顺序表的定义"></a>顺序表的定义</h3><p><img src= "/images/img.png" data-lazy-src="/images/datastruct/data2.2.png" alt="data2.2.png"></p>
<h3 id="顺序表的插入删除"><a href="#顺序表的插入删除" class="headerlink" title="顺序表的插入删除"></a>顺序表的插入删除</h3><p><img src= "/images/img.png" data-lazy-src="/images/datastruct/data2.3.png" alt="data2.3.png"></p>
<h3 id="顺序表的查找"><a href="#顺序表的查找" class="headerlink" title="顺序表的查找"></a>顺序表的查找</h3><p><img src= "/images/img.png" data-lazy-src="/images/datastruct/data2.4.png" alt="data2.4.png"></p>
<h2 id="线性表的链表表示"><a href="#线性表的链表表示" class="headerlink" title="线性表的链表表示"></a>线性表的链表表示</h2><h3 id="单链表的定义"><a href="#单链表的定义" class="headerlink" title="单链表的定义"></a>单链表的定义</h3><p><img src= "/images/img.png" data-lazy-src="/images/datastruct/data2.5.png" alt="data2.5.png"></p>
<h3 id="单链表的插入删除"><a href="#单链表的插入删除" class="headerlink" title="单链表的插入删除"></a>单链表的插入删除</h3><p><img src= "/images/img.png" data-lazy-src="/images/datastruct/data2.6.png" alt="data2.6.png"></p>
<h3 id="单链表的查找"><a href="#单链表的查找" class="headerlink" title="单链表的查找"></a>单链表的查找</h3><p><img src= "/images/img.png" data-lazy-src="/images/datastruct/data2.7.png" alt="data2.7.png"></p>
<h3 id="单链表的建立"><a href="#单链表的建立" class="headerlink" title="单链表的建立"></a>单链表的建立</h3><p><img src= "/images/img.png" data-lazy-src="/images/datastruct/data2.8.png" alt="data2.8.png"></p>
<h3 id="双链表"><a href="#双链表" class="headerlink" title="双链表"></a>双链表</h3><p><img src= "/images/img.png" data-lazy-src="/images/datastruct/data2.10.png" alt="data2.10.png"></p>
<h3 id="循环链表"><a href="#循环链表" class="headerlink" title="循环链表"></a>循环链表</h3><p><img src= "/images/img.png" data-lazy-src="/images/datastruct/data2.11.png" alt="data2.11.png"></p>
<h2 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h2><p><img src= "/images/img.png" data-lazy-src="/images/datastruct/data2.12.png" alt="data2.12.png"></p>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>思维导图</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构三</title>
    <url>/2025/09/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%89/</url>
    <content><![CDATA[<h1>第三章 栈和队列，数组</h1>
<h2 id="栈">栈</h2>
<p><img src= "/images/img.png" data-lazy-src="../images/datastruct/data3/data3.1.png" alt="data3.1.png"></p>
<h3 id="顺序栈的实现">顺序栈的实现</h3>
<p><img src= "/images/img.png" data-lazy-src="../images/datastruct/data3/data3.2.png" alt="data3.2.png"></p>
<h3 id="链栈的实现">链栈的实现</h3>
<p><img src= "/images/img.png" data-lazy-src="../images/datastruct/data3/data3.3.png" alt="data3.3.png"></p>
<h2 id="队列">队列</h2>
<p><img src= "/images/img.png" data-lazy-src="../images/datastruct/data3/data3.4.png" alt="data3.4.png"></p>
<h3 id="队列的顺序实现">队列的顺序实现</h3>
<p><img src= "/images/img.png" data-lazy-src="../images/datastruct/data3/data3.5.png" alt="data3.5.png"></p>
<h3 id="队列的链式实现">队列的链式实现</h3>
<p><img src= "/images/img.png" data-lazy-src="../images/datastruct/data3/data3.6.png" alt="data3.6.png"></p>
<h3 id="队列的变种">队列的变种</h3>
<p><img src= "/images/img.png" data-lazy-src="../images/datastruct/data3/data3.7.png" alt="data3.7.png"></p>
<h2 id="栈的应用">栈的应用</h2>
<h3 id="括号匹配问题">括号匹配问题</h3>
<p><img src= "/images/img.png" data-lazy-src="../images/datastruct/data3/data3.8.png" alt="data3.8.png"></p>
<h3 id="表达式求值（中缀，后缀）">表达式求值（中缀，后缀）</h3>
<p><img src= "/images/img.png" data-lazy-src="../images/datastruct/data3/data3.9.png" alt="data3.9.png"><br>
<img src= "/images/img.png" data-lazy-src="../images/datastruct/data3/data3.10.png" alt="data3.10.png"></p>
<h3 id="递归">递归</h3>
<p><img src= "/images/img.png" data-lazy-src="../images/datastruct/data3/data3.11.png" alt="data3.11.png"></p>
<h2 id="队列的应用">队列的应用</h2>
<h3 id="树的层次遍历">树的层次遍历</h3>
<h3 id="图的广度优先遍历">图的广度优先遍历</h3>
<h3 id="队列在操作系统中的应用">队列在操作系统中的应用</h3>
<h4 id="先来先服务">先来先服务</h4>
<h4 id="打印数据缓冲队列">打印数据缓冲队列</h4>
<h2 id="特殊矩阵压缩存储">特殊矩阵压缩存储</h2>
<p><img src= "/images/img.png" data-lazy-src="../images/datastruct/data3/data3.12.png" alt="data3.12.png"><br>
<img src= "/images/img.png" data-lazy-src="../images/datastruct/data3/data3.13.png" alt="data3.13.png"></p>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>思维导图</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
</search>
